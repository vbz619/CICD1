# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- test
- build
- review
- deploy
test job:
  stage: test
  tags:
  - shell
  script:
  - echo "I am a unit test!"
build job:
  stage: build
  tags:
  - shell
  script:
  - echo "I am a build image!"
deploy review:
  stage: review
  tags:
  - shell
  script:
  - echo "Do your average deploy here"
  rules:
  - if: $CI_COMMIT_REF_NAME == "main"
    when: never
  - if: "$CI_COMMIT_TAG"
    when: never
  - when: always
  environment:
    name: review/$CI_COMMIT_REF_NAME
deploy release:
  stage: deploy
  tags:
  - docker
  script:
  - echo "Deploy to a production environment"
  rules:
  - if: $CI_COMMIT_REF_NAME != "main" && $CI_COMMIT_TAG
    when: manual
  environment:
    name: production
deploy staging:
  stage: deploy
  tags:
  - docker
  script:
  - echo "Deploy to a staging environment"
  rules:
  - if: $CI_COMMIT_REF_NAME == "main"
    when: always
  - when: never
  environment:
    name: staging
include:
- template: Jobs/SAST.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
build image
  stage: build
  image: docker:18
  services:
  - docker:18-dind
  variables:
    IMAGE: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker build -t $IMAGE .
  - docker push $IMAGE
sast:
  stage: test
